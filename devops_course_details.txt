
Section 1 : Development (Code, Test, Review and Merge)

1. Setup SSH for GitHub for User

2. Create a GitHub Repository and setup GitFlow

3. Create a Spring Boot Project

4. Spring STS Setup and Import

5. Spring Boot Basic Server Code

6. Spring Boot Basic Client Code

7. Configure for SCM and Artifactory

8. Commit changes and submit pull request

Section 2 : Installation and Configuration of Softwares

3. Install and Configure Apache Tomcat

4. Install and Configure Jfrog Artifactory

5. Install and Configure Apache Maven

6. Install and Configure Jenkins Part 1

7. Install and Configure Jenkins Part II

8. Maven Security Setup & Jfrog Integration (Pending)
 
9. Jenkins with GitHub Integration (Pending)

Section 3: Continuous Integration and Continuous Deploy

1. Setup SSH and Maven Settings for Jenkins User

2. Install Jenkins Plugins

3. Jenkins Plugin Basic

4. Jenkins SNAPSHOT Builds  (Pending)

5. Jenkins Tomcat Deploy Plugin (Pending)

6. Jenkins Tomcat Deploy Script (Pending)

Section 4 : Containerization 

1. What is Virtualization

2. Containerization

3. Download, Install, & Configure Docker on Windows , MacOS & Linux 

4. Docker Commands 

5. Pulled Images and Created images from the containers 





# sudo apt-get install apt-transport-https ca-certificates curl software-properties-common


# sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"


ubuntu@jfrog:~$ history
    1  hostname
    2  cat /etc/hosts
    3  sudo apt-get install apt-transport-https ca-certificates curl software-properties-common
    4  top
    5  # sudo hostnamectl set-hostname "jfrog.keshavkummari.com"
    6  # cat /etc/hosts
    7  cat /etc/hosts
    8  # 172.31.84.127 jfrog.keshavkummari.com 
    9  ifconfig
   10  hostname
   11  sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
   12  sudo apt-key fingerprint 0EBFCD88
   13  sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
   14  sudo apt-get update
   15  sudo apt-get install docker-ce
   16  docker --version

root@jfrog:~# docker exec -it dd6a7761053b hostname
dd6a7761053b

root@jfrog:~# docker exec -it dd6a7761053b cat /usr/local/tomcat/conf/tomcat-users.xml


root@jfrog:~# history
    1  cd
    2  docker ps
    3  docker commit bc6136dde4b4 
    4  docker ps
    5  docker commit bc6136dde4b4 tomcat-kk
    6  docker images
    7  docker run -it -d -p 8070:8070 tomcat-kk:latest
    8  docker ps
    9  pwd
   10  docker ps
   11  docker stop 026023edd93c
   12  docker stop bc6136dde4b4
   13  docker ps
   14  docker images
   15  docker run -it -d -p 8060:8060 tomcat:latest
   16  docker ps
   17  docker exec -it 9dac6024abf6 ps -aux | grep tomcat
   18  docker exec -it 9dac6024abf6 ./usr/local/tomcat/bin/startup.sh
   19  docker exec -it 9dac6024abf6 /bin/bash
   20  pwd
   21  docker images
   22  docker ps
   23  docker exec -it 9dac6024abf6 ps -aux | grep tomcat
   24  pwd
   25  docker images
   26  docker ps
   27  docker rm 9dac6024abf6 
   28  docker stop 9dac6024abf6
   29  docker ps
   30  docker rm 9dac6024abf6 
   31  docker ps
   32  docker rmi tomcat
   33  docker rmi tomcat:latest
   34  docker rmi -f 96c4e536d0eb 
   35  pwd
   36  docker images
   37  docker
   38  docker images
   39  docke rps
   40  docker ps
   41  docker ps -a
   42  docker system prune -a
   43  docker images
   44  docker ps
   45  docker ps -a


docker run -d --name sonarqube04 -p 80:9000 \
 -e ALLOW_EMPTY_PASSWORD=yes \
 -e SONARQUBE_DATABASE_USER=bn_sonarqube \
 -e SONARQUBE_DATABASE_NAME=bitnami_sonarqube \
 -e SONARQUBE_DATABASE_PASSWORD=bitnami1234 \
 --volume sonarqube_data:/bitnami \
 bitnami/sonarqube:latest


